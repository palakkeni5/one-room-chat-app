version: '3.7'
services:
  postgres:
    image: postgres:10.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'

    volumes:
      # - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql-script/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

    networks:
      - mt-networks

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - mt-networks


  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "19092:19092"
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - mt-networks

  one-room-chat-app-kafka-consumer:

    image: jl7727/onechatapp-one-room-chat-app-kafka-consumer:latest
    ports:
      - '8081:8081'

    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/one_room_chat_app
      - DB_HOSTNAME=postgres
      - DB_PORT=5432
      - DB_DATABASE=one_room_chat_app
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka1:19092

    depends_on:
      - kafka1
      - zoo1
      - postgres
    networks:
      - mt-networks

  one-room-chat-app-backend:

    image: jl7727/onechatapp-one-room-chat-app-backend:latest

    ports:
      - '8080:8080'

    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/one_room_chat_app
      - DB_HOSTNAME=postgres
      - DB_PORT=5432
      - DB_DATABASE=one_room_chat_app
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka1:19092

    depends_on:
      - kafka1
      - zoo1
      - postgres
      - one-room-chat-app-kafka-consumer
    
    networks:
      - mt-networks

  one-chat-room-app-ui:
    
    image: jl7727/onechatapp-one-chat-room-app-ui:latest

    ports:
      - '3000:3000'

    depends_on:
          - one-room-chat-app-backend
          - one-room-chat-app-kafka-consumer
          - kafka1
          - zoo1
          - postgres
    networks:
      - mt-networks

networks:
  mt-networks:
    driver: bridge